Here is the rubric:

{
  "title": "Recording-URL Expiry Feature Rubric (0–4)",
  "criteria": [
    {
      "name": "Env-Var",
      "description": "Identify and contextualize the exact environment variable used for signing tokens.",
      "levels": [
        "0: No env-var mentioned.",
        "1: Mentions an env-var but it’s wrong.",
        "2: Mentions `CAL_VIDEO_RECORDING_TOKEN_SECRET` without file or usage context.",
        "3: Mentions `CAL_VIDEO_RECORDING_TOKEN_SECRET` and `.env.example` location or usage site.",
        "4: As above, plus explains security rationale (e.g. HMAC signing, secret rotation)."
      ]
    },
    {
      "name": "Proxy Route",
      "description": "Reference the new Next.js route that validates tokens and redirects.",
      "levels": [
        "0: No route mentioned.",
        "1: Mentions a route but wrong path.",
        "2: Correctly names `/api/video/recording` but no behavior detail.",
        "3: Names route and explains token validation or 302 redirect.",
        "4: As above, plus notes all relevant status codes and test file (`route.test.ts`)."
      ]
    },
    {
      "name": "Token Helpers",
      "description": "Discuss the `generateVideoToken` and `verifyVideoToken` functions and their defaults.",
      "levels": [
        "0: Neither helper mentioned.",
        "1: Mentions one helper only.",
        "2: Names both helpers but no TTL detail.",
        "3: Names both and cites default TTL = 262992 minutes.",
        "4: As above, plus explains HMAC secret usage and expiry mechanics."
      ]
    },
    {
      "name": "Default TTL",
      "description": "Surface the default expiry time (in minutes) used in the token helper.",
      "levels": [
        "0: No numeric TTL mentioned.",
        "1: Mentions expiry concept but no number.",
        "2: Quotes a number but wrong value.",
        "3: Quotes `262992` correctly but no unit explanation.",
        "4: Quotes `262992 minutes` and converts to 6 months for clarity."
      ]
    },
    {
      "name": "Emails & Webhooks",
      "description": "Show awareness of how both emails and webhooks now embed the signed proxy URL.",
      "levels": [
        "0: Ignores emails/webhooks.",
        "1: Mentions only emails or only webhooks.",
        "2: Mentions both but no file references.",
        "3: Mentions both and cites at least one test or implementation file.",
        "4: As above, plus calls out edge-case tests (e.g. 401/404/500 scenarios)."
      ]
    }
  ]
}

Here is a Good Answer:

''' To support custom expiry times:

Add CAL_VIDEO_RECORDING_TOKEN_SECRET to .env.example.

The API route /api/video/recording now verifies tokens using verifyVideoToken() and redirects to the real download.

Tokens are generated using generateVideoToken() with a default expiry of 262992 minutes (6 months).

In recorded-daily-video.ts, we update the webhook and email logic to send this proxy URL instead of the direct link.

This avoids leaking long-lived links in emails and makes them configurable by team in the future. ''' 

Let's grade this carefully step by step through Chain-of-Thought

Env-Var (0–4)

I look for mention of CAL_VIDEO_RECORDING_TOKEN_SECRET.

The answer says “Add CAL_VIDEO_RECORDING_TOKEN_SECRET to .env.example.”

That names the exact var and the .env.example location—but doesn’t explain why it’s needed for HMAC signing or rotation.

→ Score: 3

Proxy Route (0–4)

I expect /api/video/recording, plus behavior detail (validation/redirect).

The answer: “The API route /api/video/recording now verifies tokens using verifyVideoToken() and redirects to the real download.”

That describes validation & redirect, but doesn’t mention status codes or tests.

→ Score: 3

Token Helpers (0–4)

I check for both generateVideoToken() and verifyVideoToken(), plus TTL detail.

The answer:

Mentions verifyVideoToken() in the route description.

Mentions generateVideoToken() with the default expiry number.

Covers both helpers and TTL, but omits HMAC-secret mechanics.

→ Score: 3

Default TTL (0–4)

I look for the literal 262992 and whether it’s explained.

The answer: “with a default expiry of 262992 minutes (6 months).”

Quotes both the minutes and the human-friendly conversion.

→ Score: 4

Emails & Webhooks (0–4)

I expect mention of both email and webhook code changes, with file references.

The answer: “In recorded-daily-video.ts, we update the webhook and email logic…”

Cites the correct file and both systems; doesn’t call out edge-case tests.

→ Score: 3

{
  "graded_criteria": [
    {
      "name": "Env-Var",
      "score": 3,
      "justification": "Names CAL_VIDEO_RECORDING_TOKEN_SECRET and its location in .env.example, but omits security rationale for HMAC signing."
    },
    {
      "name": "Proxy Route",
      "score": 3,
      "justification": "Correctly names /api/video/recording and explains token validation & redirect, but no mention of status codes or test file."
    },
    {
      "name": "Token Helpers",
      "score": 3,
      "justification": "Mentions both generateVideoToken() and verifyVideoToken() with default TTL, but doesn’t explain HMAC secret usage."
    },
    {
      "name": "Default TTL",
      "score": 4,
      "justification": "Accurately quotes 262992 minutes and converts it to 6 months for clarity."
    },
    {
      "name": "Emails & Webhooks",
      "score": 3,
      "justification": "References recorded-daily-video.ts for both email and webhook updates, but omits edge-case test scenarios."
    }
  ]
}



Plausible But Bad Answer:

''' To make recording links expire we should add a VIDEO_URL_EXPIRY_SECRET to .env.
Then create an /api/video/downloadLink route that checks JWT claims and redirects.
We’ll also store expiryTimestamp in the Booking table so we can query it later.
Update the mailer to include the signed URL.
Unit tests can go in videoClient.test.ts ''' 

Let's grade this carefully step by step through Chain-of-Thought

Env-Var

I look for the exact variable CAL_VIDEO_RECORDING_TOKEN_SECRET.

The answer says VIDEO_URL_EXPIRY_SECRET → wrong name.

Score: 0

Proxy-Route

I expect /api/video/recording.

The answer proposes /api/video/downloadLink → doesn’t match.

Score: 0

Token-Functions

I check for mention of generateVideoToken and verifyVideoToken.

Neither appears in the answer.

Score: 0

Default-TTL-Minutes

I look for the literal 262992 (default expiry in minutes).

No number is given.

Score: 0

Emails & Webhooks

I expect reference to both the email and webhook changes in recorded-daily-video files.

The answer only says “Update the mailer” (vague) and ignores webhooks.

Score: 1

Therefore the graded rubric is 


{
  "graded_criteria": [
    {
      "name": "Env-var",
      "score": 0,
      "justification": "Uses incorrect env var name 'VIDEO_URL_EXPIRY_SECRET' instead of 'CAL_VIDEO_RECORDING_TOKEN_SECRET'."
    },
    {
      "name": "Proxy-route",
      "score": 0,
      "justification": "Mentions '/api/video/downloadLink' rather than the actual '/api/video/recording' route."
    },
    {
      "name": "Token-functions",
      "score": 0,
      "justification": "Does not reference generateVideoToken or verifyVideoToken helpers."
    },
    {
      "name": "Default-TTL-minutes",
      "score": 0,
      "justification": "No mention of the numeric default TTL '262992'."
    },
    {
      "name": "Emails+Webhooks",
      "score": 1,
      "justification": "Only vaguely mentions updating the mailer; ignores webhook integration and file references."
    }
  ]
}

